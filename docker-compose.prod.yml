# Docker Compose para producción
# Uso: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
#
# NOTA: Todas las variables de entorno y sus valores por defecto de producción
# están definidos centralizadamente en shared/config/env_constants.py
# Este archivo utiliza el patrón ${VAR:-default} para permitir sobrescribir
# los valores mientras usa los defaults centralizados del sistema.

services:
  # Configuraciones de producción para servicios de aplicación
  auth-service:
    environment:
      # Required variables for auth service
      - DATABASE_URL=${DATABASE_URL:-}
      - REDIS_URL=${REDIS_URL:-}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-RS256}
      # Environment configuration from centralized system
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-WARNING}
      - SQL_ECHO=${SQL_ECHO:-false}
      # JWT configuration using production defaults
      - JWT_KEYS_DIR=${JWT_KEYS_DIR:-/var/lib/jwt_keys}
      # Security configuration
      - VAULT_ENABLED=${VAULT_ENABLED:-true}
      - EMAIL_SERVICE_ENABLED=${EMAIL_SERVICE_ENABLED:-true}
      # File upload configuration
      - UPLOADS_DIR=${UPLOADS_DIR:-/var/lib/uploads}
    # Política de restart agresiva para producción
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  creator-hub-service:
    environment:
      # Required variables for creator hub service
      - DATABASE_URL=${DATABASE_URL:-}
      - REDIS_URL=${REDIS_URL:-}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL:-}
      - AI_ENGINE_SERVICE_URL=${AI_ENGINE_SERVICE_URL:-}
      # Environment configuration from centralized system
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-WARNING}
      - SQL_ECHO=${SQL_ECHO:-false}
      # Security configuration
      - VAULT_ENABLED=${VAULT_ENABLED:-true}
      - EMAIL_SERVICE_ENABLED=${EMAIL_SERVICE_ENABLED:-true}
      # File upload configuration
      - UPLOADS_DIR=${UPLOADS_DIR:-/var/lib/uploads}
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  ai-engine-service:
    environment:
      # Required variables for ai engine service
      - DATABASE_URL=${DATABASE_URL:-}
      - REDIS_URL=${REDIS_URL:-}
      - OLLAMA_URL=${OLLAMA_URL:-}
      - CHROMADB_URL=${CHROMADB_URL:-}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-nomic-embed-text}
      - CHAT_MODEL=${CHAT_MODEL:-llama3.2}
      # Environment configuration from centralized system
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-WARNING}
      - SQL_ECHO=${SQL_ECHO:-false}
      # AI service configuration from centralized defaults
      - CHROMA_SHARD_COUNT=${CHROMA_SHARD_COUNT:-3}
      - CHROMA_MAX_CONNECTIONS_PER_INSTANCE=${CHROMA_MAX_CONNECTIONS_PER_INSTANCE:-20}
      - DEFAULT_CHUNK_SIZE=${DEFAULT_CHUNK_SIZE:-1000}
      - DEFAULT_CHUNK_OVERLAP=${DEFAULT_CHUNK_OVERLAP:-200}
      # Security configuration
      - VAULT_ENABLED=${VAULT_ENABLED:-true}
      # File upload configuration
      - UPLOADS_DIR=${UPLOADS_DIR:-/var/lib/uploads}
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 3G  # Increased for AI workloads based on production defaults
        reservations:
          cpus: '1.0'
          memory: 1.5G
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 180s

  channel-service:
    environment:
      # Required variables for channel service
      - DATABASE_URL=${DATABASE_URL:-}
      - REDIS_URL=${REDIS_URL:-}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL:-}
      # Environment configuration from centralized system
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-WARNING}
      - SQL_ECHO=${SQL_ECHO:-false}
      # Security configuration
      - VAULT_ENABLED=${VAULT_ENABLED:-true}
      - EMAIL_SERVICE_ENABLED=${EMAIL_SERVICE_ENABLED:-true}
      # File upload configuration
      - UPLOADS_DIR=${UPLOADS_DIR:-/var/lib/uploads}
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  # Nginx con configuración de producción
  nginx:
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    # Configuración adicional para producción
    environment:
      - NGINX_WORKER_PROCESSES=auto
      - NGINX_WORKER_CONNECTIONS=1024

  # Servicios de infraestructura con configuración de producción
  postgres:
    restart: always
    environment:
      # Production PostgreSQL configuration based on centralized defaults
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements
      - POSTGRES_MAX_CONNECTIONS=${POSTGRES_MAX_CONNECTIONS:-200}
      - POSTGRES_SHARED_BUFFERS=${POSTGRES_SHARED_BUFFERS:-512MB}
      - POSTGRES_EFFECTIVE_CACHE_SIZE=${POSTGRES_EFFECTIVE_CACHE_SIZE:-2GB}
      - POSTGRES_WORK_MEM=${POSTGRES_WORK_MEM:-8MB}
      - POSTGRES_MAINTENANCE_WORK_MEM=${POSTGRES_MAINTENANCE_WORK_MEM:-128MB}
      - POSTGRES_CHECKPOINT_COMPLETION_TARGET=${POSTGRES_CHECKPOINT_COMPLETION_TARGET:-0.9}
      - POSTGRES_WAL_BUFFERS=${POSTGRES_WAL_BUFFERS:-16MB}
      - POSTGRES_DEFAULT_STATISTICS_TARGET=${POSTGRES_DEFAULT_STATISTICS_TARGET:-100}
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 2G  # Increased for production workload
        reservations:
          cpus: '0.75'
          memory: 1G

  redis:
    restart: always
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  ollama:
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

  chromadb:
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

# Configuración de red para producción
networks:
  mvp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Configuración de volúmenes para producción
# Paths align with centralized production defaults from shared/config/env_constants.py
volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/docker/volumes/mvp_postgres_data
  
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/docker/volumes/mvp_redis_data
  
  # Additional volumes for centralized production paths
  uploads_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${UPLOADS_DIR:-/var/lib/uploads}
  
  jwt_keys:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${JWT_KEYS_DIR:-/var/lib/jwt_keys}