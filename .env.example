# ============================================================================
# Environment Variables for MVP Coaching AI Platform
# ============================================================================
# 
# For the authoritative source of all environment variable names, their
# organization, and environment-specific defaults, see: shared/config/env_constants.py
# This file should be kept in sync with the development defaults in that module.
#
# Copy this file to .env and update with your values.
# Use the get_env_value() helper function from shared/config/env_constants.py
# to access these values in your code with proper fallback handling.
#
# ============================================================================

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# Main database connection URL
# Format: postgresql://user:password@host:port/database
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/ai_platform_dev

# PostgreSQL specific settings
POSTGRES_DB=ai_platform_dev
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres

# Database behavior settings
DB_AUTO_CREATE=true                    # Auto-create database if it doesn't exist (dev/test only)
SQL_ECHO=true                          # Log SQL queries (development debugging)
SLOW_QUERY_THRESHOLD=1.0               # Threshold in seconds for slow query warnings

# ============================================================================
# REDIS CONFIGURATION
# ============================================================================

# Redis connection URL for caching and session storage
# Format: redis://host:port/database_number
REDIS_URL=redis://localhost:6379/0

# ============================================================================
# JWT/AUTHENTICATION CONFIGURATION
# ============================================================================

# JWT Secret Key - MUST be changed in production!
# Should be at least 32 characters long for security
JWT_SECRET_KEY=dev-secret-key-change-in-production

# JWT Algorithm (HS256 for development, RS256 recommended for production)
JWT_ALGORITHM=HS256

# Token expiration settings
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30     # Access token lifetime (30 minutes)
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7        # Refresh token lifetime (7 days)

# JWT Claims
JWT_AUDIENCE=ai-platform-dev           # Expected audience for tokens
JWT_ISSUER=ai-platform-auth-dev        # Token issuer identifier

# JWT Key Management (for RS256 algorithm)
JWT_KEYS_DIR=/tmp/jwt_keys             # Directory for storing JWT keys
JWT_KEY_ROTATION_DAYS=30               # Days between key rotations

# ============================================================================
# AI SERVICES CONFIGURATION
# ============================================================================

# Ollama service for LLM inference
OLLAMA_URL=http://localhost:11434

# ChromaDB for vector storage
CHROMADB_URL=http://localhost:8000

# Model selection
EMBEDDING_MODEL=nomic-embed-text       # Model for text embeddings
CHAT_MODEL=llama3.2                    # Model for chat/conversation

# ChromaDB performance settings
CHROMA_SHARD_COUNT=1                   # Number of shards (1 for dev, 3+ for production)
CHROMA_MAX_CONNECTIONS_PER_INSTANCE=10 # Max connections per ChromaDB instance

# Document processing settings
DEFAULT_CHUNK_SIZE=1000                # Default text chunk size for embeddings
DEFAULT_CHUNK_OVERLAP=200              # Overlap between chunks

# ============================================================================
# SERVICE URLS CONFIGURATION
# ============================================================================

# Internal service endpoints (use container names in Docker)
AUTH_SERVICE_URL=http://localhost:8001
AI_ENGINE_SERVICE_URL=http://localhost:8002

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================

# CORS settings (comma-separated list of allowed origins)
CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080"]
ALLOWED_HOSTS=["localhost", "127.0.0.1"]

# Login security
MAX_FAILED_LOGIN_ATTEMPTS=5            # Max failed attempts before lockout
ACCOUNT_LOCKOUT_DURATION_MINUTES=30    # Duration of account lockout
PASSWORD_RESET_TOKEN_EXPIRE_MINUTES=60 # Password reset token lifetime

# Password hashing (Argon2 parameters)
ARGON2_MEMORY_COST=65536               # Memory cost in KiB (64MB for dev)
ARGON2_TIME_COST=3                     # Number of iterations
ARGON2_PARALLELISM=4                   # Degree of parallelism

# ============================================================================
# FILE UPLOAD CONFIGURATION
# ============================================================================

MAX_UPLOAD_SIZE=10485760               # Maximum file upload size (10MB)
UPLOADS_DIR=./uploads                  # Directory for uploaded files
SUPPORTED_FORMATS=["pdf", "txt", "docx", "md"]  # Allowed file formats

# ============================================================================
# ENVIRONMENT CONFIGURATION
# ============================================================================

# Environment mode (development, testing, production)
ENVIRONMENT=development

# Debug settings
DEBUG=true                             # Enable debug mode (NEVER true in production!)
LOG_LEVEL=DEBUG                        # Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)

# ============================================================================
# RATE LIMITING CONFIGURATION
# ============================================================================

RATE_LIMIT_PER_MINUTE=60               # Requests per minute per client
RATE_LIMIT_PER_HOUR=1000              # Requests per hour per client

# ============================================================================
# WEBSOCKET CONFIGURATION
# ============================================================================

WEBSOCKET_TIMEOUT=60                   # WebSocket connection timeout in seconds
MAX_CONNECTIONS_PER_INSTANCE=100       # Max concurrent WebSocket connections
HEARTBEAT_INTERVAL=30                  # WebSocket heartbeat interval in seconds

# ============================================================================
# EMAIL CONFIGURATION
# ============================================================================

# Frontend URL for email links
FRONTEND_URL=http://localhost:3000

# Email service toggle
EMAIL_SERVICE_ENABLED=false            # Enable email sending (false for development)

# Email sender information
FROM_EMAIL=noreply@example.com
FROM_NAME=AI Platform Dev

# SMTP Configuration (when EMAIL_SERVICE_ENABLED=true)
SMTP_HOST=localhost                    # SMTP server hostname
SMTP_PORT=1025                         # SMTP server port (1025 for MailHog in dev)
SMTP_USER=                             # SMTP username (if required)
SMTP_PASSWORD=                         # SMTP password (if required)
SMTP_USE_TLS=false                     # Use TLS for SMTP (true for production)

# ============================================================================
# GDPR/COMPLIANCE CONFIGURATION
# ============================================================================

# Data retention policies
GDPR_ANONYMIZATION_RETENTION_DAYS=30   # Days before anonymizing personal data
GDPR_AUDIT_RETENTION_YEARS=1          # Years to retain audit logs

# ============================================================================
# VAULT CONFIGURATION (Secret Management)
# ============================================================================

VAULT_URL=http://localhost:8200        # HashiCorp Vault URL
VAULT_TOKEN=                           # Vault authentication token
VAULT_MOUNT_POINT=secret              # Vault mount point for secrets
VAULT_ENABLED=false                    # Enable Vault integration

# ============================================================================
# TESTING CONFIGURATION
# ============================================================================

# Test-specific database and Redis URLs
TEST_DATABASE_URL=postgresql://postgres:postgres@localhost:5432/ai_platform_test
TEST_REDIS_URL=redis://localhost:6379/1

# ============================================================================
# ENVIRONMENT-SPECIFIC USAGE GUIDE
# ============================================================================
#
# DEVELOPMENT ENVIRONMENT:
# - Use the default values provided above for local development
# - Ensure Docker services are running for database, Redis, Ollama, and ChromaDB
# - Keep DEBUG=true and SQL_ECHO=true for better debugging
# - Use get_env_value() from shared/config/env_constants.py to access these values
#
# TESTING ENVIRONMENT:
# - Use separate database and Redis databases (ai_platform_test, redis/1)
# - Reduce rate limits and timeouts for faster test execution
# - Disable email service to avoid sending test emails
# - The centralized system provides optimized testing defaults
#
# PRODUCTION ENVIRONMENT:
# - MUST change JWT_SECRET_KEY to a secure random value
# - Set DEBUG=false and LOG_LEVEL=WARNING or ERROR
# - Use RS256 for JWT_ALGORITHM with proper key management
# - Configure proper CORS_ORIGINS and ALLOWED_HOSTS
# - Enable VAULT for secret management
# - Set proper database credentials and connection pooling
# - Configure email service with production SMTP server
# - Increase rate limits based on expected traffic
# - Set appropriate GDPR retention periods based on regulations
#
# CENTRALIZED CONFIGURATION SYSTEM:
# - All variable names and defaults are defined in shared/config/env_constants.py
# - Use get_env_value(var_name) for automatic fallback to environment defaults
# - Use get_environment_defaults() to get all defaults for current environment
# - Use validate_environment_variables() to check required variables
# - The CATEGORY_VARS dict organizes variables by functional area
# - Environment-specific defaults are in ENVIRONMENT_DEFAULTS dict
#
# SECURITY CONSIDERATIONS:
# - Never commit .env files with real credentials to version control
# - Use strong, unique passwords for all services
# - Rotate JWT keys regularly in production
# - Enable TLS/SSL for all external connections
# - Use Vault or similar secret management in production
# - Implement proper backup and disaster recovery for databases
#
# ============================================================================